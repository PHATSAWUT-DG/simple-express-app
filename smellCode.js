// üö® Code Smell 1: ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (Unused variable)
let unusedVariable = "I am never used";

// üö® Code Smell 2: ‡πÉ‡∏ä‡πâ var ‡πÅ‡∏ó‡∏ô let/const (‡πÉ‡∏ä‡πâ var ‡πÉ‡∏ô ES6+ ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
var oldStyleVar = "Please use let or const";

// üö® Code Smell 3: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (Cognitive Complexity)
function deeplyNestedLogic(value) {
    if (value > 0) {
        if (value < 10) {
            for (let i = 0; i < value; i++) {
                if (i % 2 === 0) {
                    console.log("Even:", i);
                    if (i === 4) {
                        console.log("Found 4!");
                        break;
                    }
                } else {
                    console.log("Odd:", i);
                }
            }
        } else if (value < 20) {
            console.log("Value is between 10 and 19");
        } else {
            console.log("Value is 20 or more");
        }
    } else {
        console.log("Non-positive value");
    }
    return "Done";
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
deeplyNestedLogic(8);

// üö® Code Smell 4: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏´‡∏•‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á (Long function)
function doManyThings() {
    const data = [1, 2, 3, 4, 5];
    let sum = 0;
    for (let i = 0; i < data.length; i++) {
        sum += data[i];
    }
    console.log("Sum:", sum);

    data.forEach(item => console.log("Item:", item));

    if (sum > 10) {
        console.log("Sum is large");
    } else {
        console.log("Sum is small");
    }

    return sum;
}

doManyThings();

// üö® Code Smell 5: Magic Number (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏•‡∏≠‡∏¢ ‡πÜ ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢)
function calculateDiscount(price) {
    return price * 0.15; // 15% discount? ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£
}

// üö® Code Smell 6: ‡∏ä‡∏∑‡πà‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
function x(y) {
    return y * y;
}

// üö® Code Smell 7: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ console.log ‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (Logging)
console.log("Starting server...");
console.log("Loading config...");
console.log("User connected");
console.log("Processing request...");
console.log("Request done");

// üö® Code Smell 8: Global variable
window.globalHack = "Avoid using window or global scope";

// üö® Code Smell 9: Empty block (‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏á)
if (false) {
    // ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤
}

// üö® Code Smell 10: Redundant assignment
let message = "Hello";
message = "Hello, World!"; // ‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
console.log(message);